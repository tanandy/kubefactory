---
- hosts: localhost
  become: no
  gather_facts: no

  vars:
    src_terraform_dir: "{{ (playbook_dir + '/../') | realpath }}/terraform/core"
    terraform_dir: "{{ workspace_terraform_dir }}/core"

    ssh_private_key_file: "{{ workspace_secrets_dir }}/{{ workspace }}.key"
    ssh_public_key_file: "{{ ssh_private_key_file }}.pub"
    
    ready_host_name: "{{ workspace }}"
    raw_host_name: "raw_{{ workspace }}"
    
    clan_name: "{{ workspace }}_clan"
    
    ready_host_vars_dir: "{{ host_vars_dir }}/{{ ready_host_name }}"
    ready_tf_host_vars_file: "{{ ready_host_vars_dir }}/tf_core.yml"
    ready_srv_host_vars_file: "{{ ready_host_vars_dir }}/system.yml"

    raw_tf_host_vars_file: "{{ host_vars_dir }}/{{ raw_host_name }}.yml"
    block_marker: >-
      # {mark} -- playbooks/tf_core.yml -- {{ workspace }}

  tasks:
    - import_tasks: "{{ playbook_dir }}/inc/_tf_sanity_checks.yml"
        
    - name: APPLY - Create a dedicated keypair
      openssh_keypair:
        path: "{{ ssh_private_key_file }}"
        type: ed25519
      when: tf_action == 'apply'

    - name: DESTROY - Remove clan link from inventory
      lineinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: absent
        line: >-
          {{ clan_name }}
      when: tf_action == 'destroy'

    - name: DESTROY - Remove clan definition from inventory group
      blockinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: absent
        marker: "{{ block_marker }}"
      when: tf_action == 'destroy'

    - name: DESTROY - Remove clan configuration from ssh config file
      blockinfile:
        path: "{{ ansible_pwd }}/ssh.cfg"
        state: absent
        marker: "{{ block_marker }}"
      when: tf_action == 'destroy'

    - name: Copy terraform sources
      copy:
        src: "{{ src_terraform_dir }}"
        dest: "{{ workspace_terraform_dir }}"
      when: tf_action == 'apply'

    - name: COMMON - Do Terraform
      terraform:
        project_path: "{{ terraform_dir }}"
        state: "{{ (tf_action == 'destroy') | ternary('absent', 'present') }}"
        force_init: true
        workspace: "{{ workspace }}"
        variables:
          ssh_public_key_file: "{{ ssh_public_key_file }}"
      register: tf_result

    - name: APPLY - Terraform output extract
      set_fact:
        public_ipv4: "{{ tf_result.outputs.ipv4.value }}"
        public_ipv6: "{{ tf_result.outputs.ipv6.value }}"
        raw_ssh_user: "{{ tf_result.outputs.raw_ssh_user.value }}"
      when: tf_action == 'apply'

    - name: APPLY - Render terraform host vars
      copy:
        dest: "{{ item }}"
        content: |
          ---
          workspace: "{{ workspace }}"
          caretaker_authorized_key_files:
            - "{{ ssh_public_key_file }}"
          public_ipv4: "{{ public_ipv4 }}"
          public_ipv6: "{{ public_ipv6 }}"
      loop:
        - "{{ raw_tf_host_vars_file }}"
        - "{{ ready_tf_host_vars_file }}"
      when: tf_action == 'apply'

    - name: APPLY - Render terraform host vars
      template:
        src: host_vars.yml.j2
        dest: "{{ ready_srv_host_vars_file }}"
      when: tf_action == 'apply'

    - name: APPLY - Add raw and ready host definitions to ssh config
      blockinfile:
        path: "{{ ansible_pwd }}/ssh.cfg"
        state: present
        create: yes
        marker: "{{ block_marker }}"
        block: |
          Host {{ raw_host_name }} 
            Hostname {{ public_ipv4 }}
            User {{ raw_ssh_user }}
            IdentityFile {{ ssh_private_key_file }}
            IdentitiesOnly yes
            StrictHostKeyChecking no

          Host {{ ready_host_name }}
            Hostname {{ public_ipv4 }}
            User caretaker
            IdentityFile {{ ssh_private_key_file }}
            IdentitiesOnly yes
            StrictHostKeyChecking no
      when: tf_action == 'apply'

    - name: APPLY - Add raw and ready host definitions to inventory group
      blockinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: present
        create: yes
        marker: "{{ block_marker }}"
        block: |
          [{{ clan_name }}]
          {{ raw_host_name }}
          {{ ready_host_name }}    
      when: tf_action == 'apply'

    - name: APPLY - Link created host group to 'clans' group in inventory
      lineinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: present
        line: >-
          {{ clan_name }}
        insertafter: >-
          \[clans:children\]
      when: tf_action == 'apply'
