---
- hosts: localhost
  become: no
  gather_facts: no

  vars:
    tf_stack_dir: "{{ ansible_pwd }}/terraform/core"
    tf_action: "apply"

    ssh_private_key_file: "{{ keys_dir }}/{{ workspace }}.key"
    ssh_public_key_file: "{{ ssh_private_key_file }}.pub"
    
    ready_host_name: "{{ workspace }}"
    raw_host_name: "raw_{{ workspace }}"
    
    clan_name: "{{ workspace }}_clan"
    
    ready_host_vars_dir: "{{ host_vars_dir }}/{{ ready_host_name }}"
    ready_tf_host_vars_file: "{{ ready_host_vars_dir }}/tf_vars.yml"
    ready_srv_host_vars_file: "{{ ready_host_vars_dir }}/services.yml"

    raw_host_vars_dir: "{{ host_vars_dir }}/{{ raw_host_name }}"
    raw_tf_host_vars_file: "{{ raw_host_vars_dir }}/tf_vars.yml"

  tasks:
    - name: Sanity checks
      assert:
        that:
          - workspace is defined
          - workspace != 'default'
        msg: "'workspace' must be defined and not 'default'"

    - name: Directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ keys_dir }}"
        - "{{ ready_host_vars_dir }}"
        - "{{ raw_host_vars_dir }}"
      when: tf_action == 'apply'
        
    - name: Create a dedicated keypair
      openssh_keypair:
        path: "{{ ssh_private_key_file }}"
        type: ed25519
      when: tf_action == 'apply'

    - name: Remove clan link from inventory
      lineinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: absent
        line: >-
          {{ clan_name }}
      when: tf_action == 'destroy'

    - name: Remove clan definition from inventory group
      blockinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: absent
        marker: "# {mark} -- playbooks/create_cloud_host.yml -- {{ workspace }}"
      when: tf_action == 'destroy'

    - name: Remove clan configuration from ssh config file
      blockinfile:
        path: "{{ ansible_pwd }}/ssh.cfg"
        state: absent
        marker: "# {mark} -- playbooks/create_cloud_host.yml -- {{ workspace }}"
      when: tf_action == 'destroy'

    - name: Terraform
      terraform:
        project_path: "{{ tf_stack_dir }}"
        state: "{{ (tf_action == 'destroy') | ternary('absent', 'present') }}"
        force_init: true
        workspace: "{{ workspace }}"
        variables:
          ssh_public_key_file: "{{ ssh_public_key_file }}"
      register: tf_result

    - name: Terraform output extract
      set_fact:
        public_ipv4: "{{ tf_result.outputs.ipv4.value }}"
        public_ipv6: "{{ tf_result.outputs.ipv6.value }}"
        raw_ssh_user: "{{ tf_result.outputs.raw_ssh_user.value }}"
      when: tf_action == 'apply'

    - name: Render terraform host vars
      copy:
        dest: "{{ item }}"
        content: |
          ---
          workspace: "{{ workspace }}"
          caretaker_authorized_key_files:
            - "{{ ssh_public_key_file }}"
          public_ipv4: "{{ public_ipv4 }}"
          public_ipv6: "{{ public_ipv6 }}"
      loop:
        - "{{ raw_tf_host_vars_file }}"
        - "{{ ready_tf_host_vars_file }}"
      when: tf_action == 'apply'

    - name: Render terraform host vars
      template:
        src: host_vars.yml.j2
        dest: "{{ ready_srv_host_vars_file }}"
      when: tf_action == 'apply'

    - name: Add raw and ready host definitions to ssh config
      blockinfile:
        path: "{{ ansible_pwd }}/ssh.cfg"
        state: present
        create: yes
        marker: "# {mark} -- playbooks/create_cloud_host.yml -- {{ workspace }}"
        block: |
          Host {{ raw_host_name }} 
            Hostname {{ public_ipv4 }}
            User {{ raw_ssh_user }}
            IdentityFile {{ ssh_private_key_file }}
            IdentitiesOnly yes
            StrictHostKeyChecking no

          Host {{ ready_host_name }}
            Hostname {{ public_ipv4 }}
            User caretaker
            IdentityFile {{ ssh_private_key_file }}
            IdentitiesOnly yes
            StrictHostKeyChecking no
      when: tf_action == 'apply'

    - name: Add raw and ready host definitions to inventory group
      blockinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: present
        create: yes
        marker: "# {mark} -- playbooks/create_cloud_host.yml -- {{ workspace }}"
        block: |
          [{{ clan_name }}]
          {{ raw_host_name }}
          {{ ready_host_name }}    
      when: tf_action == 'apply'

    - name: Link created host group to 'clans' group in inventory
      lineinfile:
        path: "{{ ansible_pwd }}/hosts"
        state: present
        line: >-
          {{ clan_name }}
        insertafter: >-
          \[clans:children\]
      when: tf_action == 'apply'

    - meta: refresh_inventory

