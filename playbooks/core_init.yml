---
- name: Init host for management
  hosts: "raw_{{ workspace }}"
  become: yes
  gather_facts: no
  strategy: linear

  tasks:
    - wait_for_connection:
        timeout: 300
        sleep: 10
        
    - name: "Create python alternative to python3"
      raw: >-
        update-alternatives --install /usr/bin/python python /usr/bin/python3 50
      args:
        executable: /bin/bash

    - name: "Update package cache (RAW: ALWAYS CHANGED)"
      raw: apt-get update

    - name: "Install mandatory packages (RAW: ALWAYS CHANGED)"
      raw: >-
        apt-get install -y {{ clan_system_packages | join(' ') }}

- name: Update system
  hosts: "raw_{{ workspace }}"
  gather_facts: no
  become: yes

  tasks:
    - name: "Safe-upgrade system"
      apt:
        update_cache: yes
        upgrade: safe

    - name: "Full-upgrade system"
      apt:
        update_cache: yes
        upgrade: full

- name: Prepare clan caretaker access
  hosts: "raw_{{ workspace }}"
  become: yes
  gather_facts: no
  tags:
    - caretaker

  tasks:
    - name: "Sanity check"
      assert:
        that:
          - caretaker_authorized_key_files is defined
          - caretaker_authorized_key_files | length > 0
          - clan_caretaker_name is defined
          - clan_caretaker_uid is defined
          - clan_caretaker_gid is defined
          - clan_caretaker_home is defined

    - name: "Create caretaker system group"
      group:
        name: "{{ clan_caretaker_name }}"
        gid: "{{ clan_caretaker_gid }}"

    - name: "Create caretaker system user"
      user:
        name: "{{ clan_caretaker_name }}"
        group: "{{ clan_caretaker_name }}"
        home: "{{ clan_caretaker_home }}"
        uid: "{{ clan_caretaker_uid }}"
        shell: /bin/bash

    - name: "Add sudo capabilities to caretaker"
      copy:
        dest: "/etc/sudoers.d/{{ clan_caretaker_name }}"
        content: |-
          {{ clan_caretaker_name }} ALL=(ALL) NOPASSWD: ALL
        validate: /usr/sbin/visudo -csf %s

    - name: "Create dot-ssh directory"
      file:
        path: "{{ clan_caretaker_home }}/.ssh"
        state: directory

    - name: "Authorize key for caretaker user connections"
      authorized_key:
        user: "{{ clan_caretaker_name }}"
        state: present
        key: "{{ lookup('file', item) }}"
      loop: "{{ caretaker_authorized_key_files }}"
